.columns>div {
  display: flex;
  flex-direction: column;
}

.columns img {
  width: 100%;
}

.columns>div>div {
  order: 1;
}

.columns>div>.columns-img-col {
  order: 0;
}

.columns>div>.columns-img-col img {
  display: block;
}

@media (width >=900px) {
  .columns>div {
    align-items: center;
    flex-direction: unset;
    gap: 24px;
  }

  .columns>div>div {
    flex: 1;
    order: unset;
  }
}

.columns.columns1 {
  background: #FAFAF6;
  padding: 48px 0;
}

/* Ensure direct child div (the row container) lays out its children side by side */
.columns.columns1 > div {
  display: flex;
  flex-flow: row nowrap;
  gap: 32px;
  justify-content: center;
  align-items: flex-start;
  width: 100%;
  box-sizing: border-box;
  overflow-x: auto;
  scrollbar-width: thin;
}

.columns.columns1 > div::-webkit-scrollbar {
  height: 8px;
  background: transparent;
}

/* Card styling for any direct child (to cover .columns-img-col and other possible columns) */
.columns.columns1 > div > * {
  background: #FAFAF6;
  border: 2px solid #191919;
  border-radius: 18px;
  box-shadow: 0 4px 8px rgb(60 60 60 / 15%);
  padding: 20px;
  min-width: 220px;
  max-width: 270px;
  flex: 0 1 270px;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  margin: 0;
}

/* Make images inside each card fill the card and keep rounded corners */
.columns.columns1 > div > * picture,
.columns.columns1 > div > * img {
  width: 100%;
  height: auto;
  border-radius: 12px;
  display: block;
  object-fit: cover;
}

/* Responsive: stack cards vertically and fill most of the screen width on mobile */
@media (width <= 900px) {
  .columns.columns1 > div {
    flex-flow: column nowrap;
    gap: 20px;
    justify-content: center;
    align-items: center;
    overflow-x: visible;
  }

  .columns.columns1 > div > * {
    max-width: 95vw;
    min-width: 0;
    flex: 1 1 100%;
    margin: 0 auto;
  }
}
